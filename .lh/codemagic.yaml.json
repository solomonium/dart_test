{
    "sourceFile": "codemagic.yaml",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1752579759341,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752579821521,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,90 @@\n workflows:\n+  android-workflow:\n+    name: Android Sample Workflow\n+    instance_type: mac_mini_m2\n+    max_build_duration: 120\n+    environment:\n+      flutter: stable\n+      android_signing:\n+        - cm_keystore_credentials\n+      groups:\n+        - google_credentials\n+        # - shorebird_credentials\n+      vars:\n+        JAVA_TOOL_OPTIONS: \"-Xmx5g\"\n+    scripts:\n+      - name: Set up local.properties\n+        script: echo \"flutter.sdk=$HOME/programs/flutter\" > \"$CM_BUILD_DIR/android/local.properties\"\n+      - name: Install Flutter dependencies\n+        script: |\n+          flutter pub get\n+      # - name: Install Shorebird\n+      #   script: |\n+      #     # Install Shorebird\n+      #     curl --proto '=https' --tlsv1.2 https://raw.githubusercontent.com/shorebirdtech/install/main/install.sh -sSf | bash\n+\n+      #     # Add Shorebird to PATH\n+      #     export PATH=\"/Users/builder/.shorebird/bin:$PATH\"\n+      #     export PATH=\"$HOME/.shorebird/bin:$PATH\" >> $CM_ENV\n+      #     echo PATH=\"$HOME/.shorebird/bin:$PATH\" >> $CM_ENV\n+\n+      # - name: Initialize Shorebird\n+      #   script: |\n+      #     shorebird init --force --verbose\n+      # - name: Get Flutter Version\n+      #   script: |\n+      #     # Auto-detect project's Flutter version\n+      #     FLUTTER_VERSION=$(cat pubspec.yaml | grep \"sdk:\" | cut -d':' -f2 | tr -d '\" ' | cut -d' ' -f1)\n+      #     RELEASE_VERSION=$(grep \"version:\" ./pubspec.yaml | awk '{print $2}')\n+      #     # echo \"SHOREBIRD_RELEASE_VERSION=$(echo $RELEASE_VERSION)\" >> $CM_ENV\n+      #     # # echo \"SHOREBIRD_RELEASE_VERSION=$FLUTTER_VERSION\" >> $CM_ENV\n+      #     echo \"Using Flutter version: $FLUTTER_VERSION\"\n+      # - name: Build APK debug\n+      #   script: |\n+      #     flutter build apk --debug\n+      # - name: Shorebird Release\n+      #   script: |\n+      #     shorebird flutter versions list\n+      #     shorebird release android \\\n+      #       --flutter-version=\"$FLUTTER_VERSION\" \\\n+      # - name: Create Android emulator\n+      #   script: |\n+      #     export PATH=\"$PATH\":\"$ANDROID_HOME/cmdline-tools/latest/bin\"\n+      #     echo y | sdkmanager \"system-images;android-34;google_apis;x86_64\"\n+      #     echo no | avdmanager create avd -n emulator -k \"system-images;android-34;google_apis;x86_64\" --device \"pixel_4\"\n+      #     emulator -memory 2048 -avd emulator -no-audio -gpu swiftshader_indirect -debug-init -wipe-data & adb wait-for-device\n+      # - name: Launch emulator\n+      #   script: |\n+      #     flutter emulators --list-avds\n+      #     cd $ANDROID_HOME/tools && emulator -avd emulator & adb wait-for-device\n+      #     adb install -r build/app/outputs/flutter-apk/app-debug.apk\n+      #     adb shell am start -n com.solo.flutter_codemagic_app/.MainActivity\n+\n+      - name: Build AAB with Flutter\n+        script:\n+          CURRENT_BUILD_NUMBER=$(google-play get-latest-build-number --package-name \"com.solo.flutter_codemagic_app\" --tracks=\"internal\")\n+          echo \"versionCode=$((CURRENT_BUILD_NUMBER + 1))\" > \"$CM_BUILD_DIR/version.properties\"\n+          flutter build appbundle --release --build-number=$(($CURRENT_BUILD_NUMBER + 1))\n+    artifacts:\n+      - build/**/outputs/**/*.aab\n+      - build/**/outputs/**/mapping.txt\n+      - flutter_drive.log\n+    publishing:\n+      email:\n+        recipients:\n+          - solomon@codemagic.io\n+      google_play:\n+        track: internal\n+        credentials: $GOOGLE_PLAY_SERVICE_ACCOUNT_CREDENTIALS\n+        submit_as_draft: true\n+\n+\n+\n+\n+\n+\n+workflows:\n   ios-workflow:\n     name: iOS Workflow\n     instance_type: mac_mini_m2\n     max_build_duration: 120\n@@ -35,11 +120,8 @@\n       - name: Flutter build ipa\n         script: |\n           flutter build ipa --release \\\n             --export-options-plist=\"/Users/builder/export_options.plist\"\n-\n-      # - name: CM_EXPORT_DIR\n-      #   script: cp -r $HOME/Library/Logs/gym \"$CM_EXPORT_DIR\"\n     artifacts:\n       - build/ios/ipa/*.ipa\n       - /tmp/xcodebuild_logs/*.log\n       - flutter_drive.log\n"
                }
            ],
            "date": 1752579759341,
            "name": "Commit-0",
            "content": "workflows:\n  ios-workflow:\n    name: iOS Workflow\n    instance_type: mac_mini_m2\n    max_build_duration: 120\n    triggering:\n      events:\n        - push\n      branch_patterns:\n        - pattern: \"dev\"\n          include: true\n      cancel_previous_builds: false\n    environment:\n      flutter: stable\n      xcode: latest\n      cocoapods: default\n      groups:\n        # - shorebird_credentials\n        - appstore_credentials\n      ios_signing:\n        distribution_type: app_store\n        bundle_identifier: com.solo.flutterCodemagicApp\n    integrations:\n      app_store_connect: SolomonAPIKey\n    scripts:\n      - name: Set up code signing settings on Xcode project\n        script: xcode-project use-profiles\n      # - name: Timeout test\n      #   script: |\n      #     # Will timeout after 30s but continue script\n      #     sleep 2000 || echo \"Timeout simulated - continuing\"\n      #     echo \"Running post-timeout operations\"\n      - name: Get Flutter packages\n        script: flutter pub get\n      - name: Flutter build ipa\n        script: |\n          flutter build ipa --release \\\n            --export-options-plist=\"/Users/builder/export_options.plist\"\n            # --build-name=LATEST_VERSION \\\n            # --build-number=$(($(app-store-connect get-latest-testflight-build-number \"$APP_ID\") + 1)) \\\n      # - name: CM_EXPORT_DIR\n      #   script: cp -r $HOME/Library/Logs/gym \"$CM_EXPORT_DIR\"\n    artifacts:\n      - build/ios/ipa/*.ipa\n      - /tmp/xcodebuild_logs/*.log\n      - flutter_drive.log"
        }
    ]
}